{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nlmsc\\\\Documents\\\\React\\\\emma\\\\src\\\\components\\\\sidebar\\\\Sidebar.js\",\n    _s = $RefreshSig$();\n\nimport \"./Sidebar.css\";\nimport { ReactComponent as Arrow } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../icons/Arrow.svg\";\nimport Paths from \"../../data/constants/Paths\";\nimport CSSProps from \"../../data/constants/CSSProps\";\nimport DictionaryProps from \"../../data/constants/DictionaryProps\";\nimport AppSettings from \"../../data/AppSettings\";\nimport { useTranslation } from \"react-i18next\";\nimport { Base } from \"../Base\";\nimport ClickSound from \"../../audio/mixkit-mouse-click-close-1113.wav\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Sidebar = () => {\n  _s();\n\n  const [t] = useTranslation(AppSettings.TranslationFilename);\n  return /*#__PURE__*/_jsxDEV(\"nav\", {\n    className: CSSProps.SideBar.Bar,\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: CSSProps.SideBar.Navigation,\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        className: CSSProps.SideBar.Logo,\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: Paths.None,\n          className: CSSProps.SideBar.Link,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: CSSProps.SideBar.LinkText + CSSProps.SideBar.LogoText,\n            children: AppSettings.ApplicationName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Arrow, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        className: CSSProps.SideBar.Item,\n        onClick: () => Base.prototype.SwitchPage(CSSProps.ID.Dashboard),\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: Paths.None,\n          className: CSSProps.SideBar.Link,\n          children: [/*#__PURE__*/_jsxDEV(Dashboard, {\n            id: CSSProps.ID.Dashboard\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: CSSProps.SideBar.LinkText,\n            children: t(DictionaryProps.Dashboard)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n            id: CSSProps.ID.Dashboard + CSSProps.ID.Audio,\n            src: ClickSound\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        className: CSSProps.SideBar.Item,\n        onClick: () => Base.prototype.SwitchPage(CSSProps.ID.Tasks),\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: Paths.None,\n          className: CSSProps.SideBar.Link,\n          children: [/*#__PURE__*/_jsxDEV(Tasks, {\n            id: CSSProps.ID.Tasks\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: CSSProps.SideBar.LinkText,\n            children: t(DictionaryProps.Tasks)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n            id: CSSProps.ID.Tasks + CSSProps.ID.Audio,\n            src: ClickSound\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        className: CSSProps.SideBar.Item,\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: Paths.None,\n          className: CSSProps.SideBar.Link,\n          onClick: () => Base.prototype.SwitchPage(CSSProps.ID.Organisation),\n          children: [/*#__PURE__*/_jsxDEV(Sitemap, {\n            id: CSSProps.ID.Organisation\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: CSSProps.SideBar.LinkText,\n            children: t(DictionaryProps.Organisation)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n            id: CSSProps.ID.Organisation + CSSProps.ID.Audio,\n            src: ClickSound\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        className: CSSProps.SideBar.Item,\n        onClick: () => Base.prototype.SwitchPage(CSSProps.ID.Setting),\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: Paths.None,\n          className: CSSProps.SideBar.Link,\n          children: [/*#__PURE__*/_jsxDEV(Settings, {\n            id: CSSProps.ID.Setting\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: CSSProps.SideBar.LinkText,\n            children: t(DictionaryProps.Settings)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n            id: CSSProps.ID.Setting + CSSProps.ID.Audio,\n            src: ClickSound\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Sidebar, \"8/i+n86j1+Aux75AhmzAod2S5k8=\", false, function () {\n  return [useTranslation];\n});\n\n_c = Sidebar;\nexport default Sidebar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Sidebar\");","map":{"version":3,"sources":["C:/Users/nlmsc/Documents/React/emma/src/components/sidebar/Sidebar.js"],"names":["Paths","CSSProps","DictionaryProps","AppSettings","useTranslation","Base","ClickSound","Sidebar","t","TranslationFilename","SideBar","Bar","Navigation","Logo","None","Link","LinkText","LogoText","ApplicationName","Item","prototype","SwitchPage","ID","Dashboard","Audio","Tasks","Organisation","Setting","Settings"],"mappings":";;;AAAA,OAAO,eAAP;;AAEA,OAAOA,KAAP,MAAkB,4BAAlB;AACA,OAAOC,QAAP,MAAqB,+BAArB;AACA,OAAOC,eAAP,MAA4B,sCAA5B;AACA,OAAOC,WAAP,MAAwB,wBAAxB;AACA,SAASC,cAAT,QAA+B,eAA/B;AACA,SAASC,IAAT,QAAqB,SAArB;AACA,OAAOC,UAAP,MAAuB,+CAAvB;;;AAEA,MAAMC,OAAO,GAAG,MAAM;AAAA;;AACpB,QAAM,CAACC,CAAD,IAAMJ,cAAc,CAACD,WAAW,CAACM,mBAAb,CAA1B;AAEA,sBACE;AAAK,IAAA,SAAS,EAAER,QAAQ,CAACS,OAAT,CAAiBC,GAAjC;AAAA,2BACE;AAAI,MAAA,SAAS,EAAEV,QAAQ,CAACS,OAAT,CAAiBE,UAAhC;AAAA,8BACE;AAAI,QAAA,SAAS,EAAEX,QAAQ,CAACS,OAAT,CAAiBG,IAAhC;AAAA,+BACE;AAAG,UAAA,IAAI,EAAEb,KAAK,CAACc,IAAf;AAAqB,UAAA,SAAS,EAAEb,QAAQ,CAACS,OAAT,CAAiBK,IAAjD;AAAA,kCACE;AAAM,YAAA,SAAS,EAAEd,QAAQ,CAACS,OAAT,CAAiBM,QAAjB,GAA4Bf,QAAQ,CAACS,OAAT,CAAiBO,QAA9D;AAAA,sBAAyEd,WAAW,CAACe;AAArF;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAOE;AAAI,QAAA,SAAS,EAAEjB,QAAQ,CAACS,OAAT,CAAiBS,IAAhC;AAAsC,QAAA,OAAO,EAAE,MAAId,IAAI,CAACe,SAAL,CAAeC,UAAf,CAA0BpB,QAAQ,CAACqB,EAAT,CAAYC,SAAtC,CAAnD;AAAA,+BACE;AAAG,UAAA,IAAI,EAAEvB,KAAK,CAACc,IAAf;AAAqB,UAAA,SAAS,EAAEb,QAAQ,CAACS,OAAT,CAAiBK,IAAjD;AAAA,kCACE,QAAC,SAAD;AAAW,YAAA,EAAE,EAAEd,QAAQ,CAACqB,EAAT,CAAYC;AAA3B;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAM,YAAA,SAAS,EAAEtB,QAAQ,CAACS,OAAT,CAAiBM,QAAlC;AAAA,sBAA6CR,CAAC,CAACN,eAAe,CAACqB,SAAjB;AAA9C;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE;AAAO,YAAA,EAAE,EAAEtB,QAAQ,CAACqB,EAAT,CAAYC,SAAZ,GAAwBtB,QAAQ,CAACqB,EAAT,CAAYE,KAA/C;AAAsD,YAAA,GAAG,EAAElB;AAA3D;AAAA;AAAA;AAAA;AAAA,kBAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAPF,eAcE;AAAI,QAAA,SAAS,EAAEL,QAAQ,CAACS,OAAT,CAAiBS,IAAhC;AAAsC,QAAA,OAAO,EAAE,MAAId,IAAI,CAACe,SAAL,CAAeC,UAAf,CAA0BpB,QAAQ,CAACqB,EAAT,CAAYG,KAAtC,CAAnD;AAAA,+BACE;AAAG,UAAA,IAAI,EAAEzB,KAAK,CAACc,IAAf;AAAqB,UAAA,SAAS,EAAEb,QAAQ,CAACS,OAAT,CAAiBK,IAAjD;AAAA,kCACE,QAAC,KAAD;AAAO,YAAA,EAAE,EAAEd,QAAQ,CAACqB,EAAT,CAAYG;AAAvB;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAM,YAAA,SAAS,EAAExB,QAAQ,CAACS,OAAT,CAAiBM,QAAlC;AAAA,sBAA6CR,CAAC,CAACN,eAAe,CAACuB,KAAjB;AAA9C;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE;AAAO,YAAA,EAAE,EAAExB,QAAQ,CAACqB,EAAT,CAAYG,KAAZ,GAAoBxB,QAAQ,CAACqB,EAAT,CAAYE,KAA3C;AAAkD,YAAA,GAAG,EAAElB;AAAvD;AAAA;AAAA;AAAA;AAAA,kBAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAdF,eAqBE;AAAI,QAAA,SAAS,EAAEL,QAAQ,CAACS,OAAT,CAAiBS,IAAhC;AAAA,+BACE;AAAG,UAAA,IAAI,EAAEnB,KAAK,CAACc,IAAf;AAAqB,UAAA,SAAS,EAAEb,QAAQ,CAACS,OAAT,CAAiBK,IAAjD;AAAuD,UAAA,OAAO,EAAE,MAAIV,IAAI,CAACe,SAAL,CAAeC,UAAf,CAA0BpB,QAAQ,CAACqB,EAAT,CAAYI,YAAtC,CAApE;AAAA,kCACE,QAAC,OAAD;AAAS,YAAA,EAAE,EAAEzB,QAAQ,CAACqB,EAAT,CAAYI;AAAzB;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAM,YAAA,SAAS,EAAEzB,QAAQ,CAACS,OAAT,CAAiBM,QAAlC;AAAA,sBAA6CR,CAAC,CAACN,eAAe,CAACwB,YAAjB;AAA9C;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE;AAAO,YAAA,EAAE,EAAEzB,QAAQ,CAACqB,EAAT,CAAYI,YAAZ,GAA2BzB,QAAQ,CAACqB,EAAT,CAAYE,KAAlD;AAAyD,YAAA,GAAG,EAAElB;AAA9D;AAAA;AAAA;AAAA;AAAA,kBAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cArBF,eA4BE;AAAI,QAAA,SAAS,EAAEL,QAAQ,CAACS,OAAT,CAAiBS,IAAhC;AAAsC,QAAA,OAAO,EAAE,MAAId,IAAI,CAACe,SAAL,CAAeC,UAAf,CAA0BpB,QAAQ,CAACqB,EAAT,CAAYK,OAAtC,CAAnD;AAAA,+BACE;AAAG,UAAA,IAAI,EAAE3B,KAAK,CAACc,IAAf;AAAqB,UAAA,SAAS,EAAEb,QAAQ,CAACS,OAAT,CAAiBK,IAAjD;AAAA,kCACE,QAAC,QAAD;AAAU,YAAA,EAAE,EAAEd,QAAQ,CAACqB,EAAT,CAAYK;AAA1B;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAM,YAAA,SAAS,EAAE1B,QAAQ,CAACS,OAAT,CAAiBM,QAAlC;AAAA,sBAA6CR,CAAC,CAACN,eAAe,CAAC0B,QAAjB;AAA9C;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE;AAAO,YAAA,EAAE,EAAE3B,QAAQ,CAACqB,EAAT,CAAYK,OAAZ,GAAsB1B,QAAQ,CAACqB,EAAT,CAAYE,KAA7C;AAAoD,YAAA,GAAG,EAAElB;AAAzD;AAAA;AAAA;AAAA;AAAA,kBAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cA5BF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAwCD,CA3CD;;GAAMC,O;UACQH,c;;;KADRG,O;AA6CN,eAAeA,OAAf","sourcesContent":["import \"./Sidebar.css\";\r\nimport { ReactComponent as Arrow } from \"../../icons/Arrow.svg\";\r\nimport Paths from \"../../data/constants/Paths\";\r\nimport CSSProps from \"../../data/constants/CSSProps\";\r\nimport DictionaryProps from \"../../data/constants/DictionaryProps\";\r\nimport AppSettings from \"../../data/AppSettings\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Base } from \"../Base\";\r\nimport ClickSound from \"../../audio/mixkit-mouse-click-close-1113.wav\";\r\n\r\nconst Sidebar = () => {\r\n  const [t] = useTranslation(AppSettings.TranslationFilename);\r\n\r\n  return (\r\n    <nav className={CSSProps.SideBar.Bar}>\r\n      <ul className={CSSProps.SideBar.Navigation}>\r\n        <li className={CSSProps.SideBar.Logo} >\r\n          <a href={Paths.None} className={CSSProps.SideBar.Link}>\r\n            <span className={CSSProps.SideBar.LinkText + CSSProps.SideBar.LogoText}>{AppSettings.ApplicationName}</span>\r\n            <Arrow />\r\n          </a>\r\n        </li>\r\n        <li className={CSSProps.SideBar.Item} onClick={()=>Base.prototype.SwitchPage(CSSProps.ID.Dashboard)}>\r\n          <a href={Paths.None} className={CSSProps.SideBar.Link}>\r\n            <Dashboard id={CSSProps.ID.Dashboard} />\r\n            <span className={CSSProps.SideBar.LinkText}>{t(DictionaryProps.Dashboard)}</span>\r\n            <audio id={CSSProps.ID.Dashboard + CSSProps.ID.Audio} src={ClickSound}/>\r\n          </a>\r\n        </li>\r\n        <li className={CSSProps.SideBar.Item} onClick={()=>Base.prototype.SwitchPage(CSSProps.ID.Tasks)}>\r\n          <a href={Paths.None} className={CSSProps.SideBar.Link}>\r\n            <Tasks id={CSSProps.ID.Tasks}/>\r\n            <span className={CSSProps.SideBar.LinkText}>{t(DictionaryProps.Tasks)}</span>\r\n            <audio id={CSSProps.ID.Tasks + CSSProps.ID.Audio} src={ClickSound}/>\r\n          </a>\r\n        </li>\r\n        <li className={CSSProps.SideBar.Item}>\r\n          <a href={Paths.None} className={CSSProps.SideBar.Link} onClick={()=>Base.prototype.SwitchPage(CSSProps.ID.Organisation)}>\r\n            <Sitemap id={CSSProps.ID.Organisation}/>\r\n            <span className={CSSProps.SideBar.LinkText}>{t(DictionaryProps.Organisation)}</span>\r\n            <audio id={CSSProps.ID.Organisation + CSSProps.ID.Audio} src={ClickSound}/>\r\n          </a>\r\n        </li>\r\n        <li className={CSSProps.SideBar.Item} onClick={()=>Base.prototype.SwitchPage(CSSProps.ID.Setting)}>\r\n          <a href={Paths.None} className={CSSProps.SideBar.Link}>\r\n            <Settings id={CSSProps.ID.Setting}/>\r\n            <span className={CSSProps.SideBar.LinkText}>{t(DictionaryProps.Settings)}</span>\r\n            <audio id={CSSProps.ID.Setting + CSSProps.ID.Audio} src={ClickSound}/>\r\n          </a>\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n"]},"metadata":{},"sourceType":"module"}