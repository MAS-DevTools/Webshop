{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nlmsc\\\\Documents\\\\React\\\\emma\\\\src\\\\components\\\\navbar\\\\controls\\\\VolumeControl.js\";\nimport \"../Navbar.css\";\nimport CSSProps from \"../../../data/constants/CSSProps\";\nimport React, { useEffect } from \"react\";\nimport { SVGIcon } from \"../../Icon\";\nimport ClickSound from \"../../../audio/mixkit-mouse-click-close-1113.wav\";\nimport LocalStorageProps from \"../../../data/constants/LocalStorageProps\";\nimport { Validator } from \"../../../tools/Validator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Volume extends React.Component {\n  getIcon() {\n    let cachedValue = localStorage.getItem(LocalStorageProps.Volume);\n\n    if (Validator.prototype.isEmpty(cachedValue)) {\n      localStorage.setItem(LocalStorageProps.Volume, CSSProps.NavBar.VolumeOn);\n      return localStorage.getItem(LocalStorageProps.Volume);\n    }\n\n    return cachedValue;\n  }\n\n  toggle() {\n    let currentState = this.getIcon();\n\n    if (currentState === CSSProps.NavBar.VolumeOn) {\n      localStorage.setItem(LocalStorageProps.Volume, CSSProps.NavBar.VolumeOff);\n    } else {\n      localStorage.setItem(LocalStorageProps.Volume, CSSProps.NavBar.VolumeOn);\n    }\n\n    useEffect(() => {\n      const btnIcon = document.getElementById(CSSProps.ID.Volume);\n      btnIcon.style.cssText = CSSProps.Style.NavDeselected;\n    });\n    let toggleState = localStorage.getItem(LocalStorageProps.Volume);\n    this.setState({\n      iconName: toggleState\n    });\n    return toggleState;\n  }\n\n  render() {\n    let iconName;\n    let inLineStyling = CSSProps.Style.NavDeselected;\n\n    if (this.state != null) {\n      if (Validator.prototype.isEmpty(this.state.iconName) === false) {\n        iconName = this.state.iconName;\n      }\n    } else {\n      iconName = this.getIcon();\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"li\", {\n      className: CSSProps.NavBar.Item,\n      onClick: () => iconName = this.toggle(),\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        href: this.props.path,\n        className: CSSProps.NavBar.Link,\n        children: [/*#__PURE__*/_jsxDEV(SVGIcon, {\n          name: iconName,\n          id: CSSProps.ID.Volume,\n          className: CSSProps.NavBar.Icon\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: CSSProps.NavBar.Text,\n          children: this.props.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n          id: this.props.iconID + CSSProps.ID.Audio,\n          src: ClickSound\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Volume;","map":{"version":3,"sources":["C:/Users/nlmsc/Documents/React/emma/src/components/navbar/controls/VolumeControl.js"],"names":["CSSProps","React","useEffect","SVGIcon","ClickSound","LocalStorageProps","Validator","Volume","Component","getIcon","cachedValue","localStorage","getItem","prototype","isEmpty","setItem","NavBar","VolumeOn","toggle","currentState","VolumeOff","btnIcon","document","getElementById","ID","style","cssText","Style","NavDeselected","toggleState","setState","iconName","render","inLineStyling","state","Item","props","path","Link","Icon","Text","text","iconID","Audio"],"mappings":"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","sourcesContent":["import \"../Navbar.css\";\r\nimport CSSProps from \"../../../data/constants/CSSProps\";\r\nimport React, { useEffect } from \"react\";\r\nimport { SVGIcon } from \"../../Icon\";\r\nimport ClickSound from \"../../../audio/mixkit-mouse-click-close-1113.wav\";\r\nimport LocalStorageProps from \"../../../data/constants/LocalStorageProps\";\r\nimport { Validator } from \"../../../tools/Validator\";\r\n\r\nclass Volume extends React.Component {\r\n  getIcon() {\r\n    let cachedValue = localStorage.getItem(LocalStorageProps.Volume);\r\n    if (Validator.prototype.isEmpty(cachedValue)) {\r\n      localStorage.setItem(LocalStorageProps.Volume, CSSProps.NavBar.VolumeOn);\r\n      return localStorage.getItem(LocalStorageProps.Volume);\r\n    }\r\n    return cachedValue;\r\n  }\r\n\r\n  toggle() {\r\n    let currentState = this.getIcon();\r\n    \r\n\r\n    if(currentState === CSSProps.NavBar.VolumeOn){\r\n      localStorage.setItem(LocalStorageProps.Volume, CSSProps.NavBar.VolumeOff);\r\n     \r\n    }else{\r\n      localStorage.setItem(LocalStorageProps.Volume, CSSProps.NavBar.VolumeOn); \r\n      \r\n    }\r\n    useEffect(()=>{\r\n      const btnIcon = document.getElementById(CSSProps.ID.Volume);\r\n      btnIcon.style.cssText= CSSProps.Style.NavDeselected;     \r\n    });\r\n    let toggleState =localStorage.getItem(LocalStorageProps.Volume);\r\n    this.setState({iconName : toggleState});\r\n    return toggleState;\r\n  }\r\n\r\n  render() {\r\n    \r\n    let iconName;\r\n    let inLineStyling =CSSProps.Style.NavDeselected;     \r\n    if(this.state != null){\r\n      if(Validator.prototype.isEmpty(this.state.iconName) === false){\r\n        iconName = this.state.iconName;\r\n      }\r\n    }else{\r\n      iconName = this.getIcon();\r\n    }\r\n    \r\n    return (\r\n      <li className={CSSProps.NavBar.Item} onClick={() => iconName =this.toggle()}>\r\n        <a href={this.props.path} className={CSSProps.NavBar.Link}>\r\n          <SVGIcon\r\n            name={iconName}\r\n            id={CSSProps.ID.Volume}\r\n            className={CSSProps.NavBar.Icon}\r\n          />\r\n          <span className={CSSProps.NavBar.Text}>{this.props.text}</span>\r\n          <audio id={this.props.iconID + CSSProps.ID.Audio} src={ClickSound} />\r\n        </a>\r\n      </li>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Volume;\r\n"]},"metadata":{},"sourceType":"module"}