{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nlmsc\\\\Documents\\\\React\\\\emma\\\\src\\\\components\\\\navbar\\\\controls\\\\LanguageControl.js\",\n    _s = $RefreshSig$();\n\nimport \"../Navbar.css\";\nimport DictionaryProps from \"../../../data/constants/DictionaryProps\";\nimport LocalStorageProps from \"../../../data/constants/LocalStorageProps\";\nimport React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { ReactComponent as Language } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../../icons/Language.svg\";\nimport Paths from \"../../../data/constants/Paths\";\nimport CSSProps from \"../../../data/constants/CSSProps\";\nimport AppSettings from \"../../../data/AppSettings\";\nimport { Validator } from \"../../../Tools/Validator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LanguageControl = () => {\n  _s();\n\n  const [t, i18n] = useTranslation(AppSettings.TranslationFilename);\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    className: CSSProps.NavBar.Item + CSSProps.NavBar.hasDropdown,\n    children: [/*#__PURE__*/_jsxDEV(\"a\", {\n      className: CSSProps.NavBar.Link,\n      href: Paths.None,\n      children: [/*#__PURE__*/_jsxDEV(Language, {\n        className: CSSProps.NavBar.Icon\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: CSSProps.NavBar.Text,\n        children: t(DictionaryProps.Language)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: CSSProps.NavBar.Dropdown,\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        id: CSSProps.NavBar.NL,\n        className: CSSProps.NavBar.DropdownItem,\n        onClick: () => {\n          i18n.changeLanguage(CSSProps.NavBar.NL);\n          CacheLanguage(CSSProps.NavBar.NL);\n        },\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: Paths.None,\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: CSSProps.NavBar.DropdownText,\n            children: \"Nederlands\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        id: CSSProps.NavBar.EN,\n        className: CSSProps.NavBar.DropdownItem,\n        onClick: () => {\n          i18n.changeLanguage(CSSProps.NavBar.EN);\n          CacheLanguage(CSSProps.NavBar.EN);\n        },\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: Paths.None,\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: CSSProps.NavBar.DropdownText,\n            children: \"English\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n\n_s(LanguageControl, \"4gi9wXtdE+JncrMt78YHghJPC7E=\", false, function () {\n  return [useTranslation];\n});\n\n_c = LanguageControl;\n\nfunction CacheLanguage(language) {\n  var selectedLanguage = localStorage.getItem(LocalStorageProps.Language);\n  alert(selectedLanguage);\n  alert(Validator.prototype.isEmpty('undefined'));\n\n  if (Validator.prototype.isEmpty(language) === false) {\n    const selectedButton = document.getElementById(selectedLanguage);\n    selectedButton.style.cssText = ``;\n  }\n\n  const newSelectedButton = document.getElementById(language);\n  newSelectedButton.style.cssText = 'border-bottom: 2px solid red;';\n  localStorage.removeItem(LocalStorageProps.Language);\n  localStorage.setItem(LocalStorageProps.Language, language);\n}\n\n_c2 = CacheLanguage;\nexport default LanguageControl;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"LanguageControl\");\n$RefreshReg$(_c2, \"CacheLanguage\");","map":{"version":3,"sources":["C:/Users/nlmsc/Documents/React/emma/src/components/navbar/controls/LanguageControl.js"],"names":["DictionaryProps","LocalStorageProps","React","useTranslation","Paths","CSSProps","AppSettings","Validator","LanguageControl","t","i18n","TranslationFilename","NavBar","Item","hasDropdown","Link","None","Icon","Text","Language","Dropdown","NL","DropdownItem","changeLanguage","CacheLanguage","DropdownText","EN","language","selectedLanguage","localStorage","getItem","alert","prototype","isEmpty","selectedButton","document","getElementById","style","cssText","newSelectedButton","removeItem","setItem"],"mappings":"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","sourcesContent":["import \"../Navbar.css\";\r\nimport DictionaryProps from \"../../../data/constants/DictionaryProps\";\r\nimport LocalStorageProps from \"../../../data/constants/LocalStorageProps\";\r\nimport React from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { ReactComponent as Language } from \"../../../icons/Language.svg\";\r\nimport Paths from \"../../../data/constants/Paths\";\r\nimport CSSProps from \"../../../data/constants/CSSProps\";\r\nimport AppSettings from \"../../../data/AppSettings\";\r\nimport {Validator} from \"../../../Tools/Validator\";\r\n\r\nconst LanguageControl = () => {\r\n  const [t, i18n] = useTranslation(AppSettings.TranslationFilename);\r\n  return (\r\n    <li className={CSSProps.NavBar.Item + CSSProps.NavBar.hasDropdown}>\r\n      <a className={CSSProps.NavBar.Link} href={Paths.None}>\r\n        <Language className={CSSProps.NavBar.Icon} />\r\n        <span className={CSSProps.NavBar.Text}>{t(DictionaryProps.Language)}</span>\r\n      </a>\r\n      <ul className={CSSProps.NavBar.Dropdown}>\r\n        <li id={CSSProps.NavBar.NL}\r\n          className={CSSProps.NavBar.DropdownItem}\r\n          onClick={() => {\r\n            i18n.changeLanguage(CSSProps.NavBar.NL);\r\n            CacheLanguage(CSSProps.NavBar.NL);\r\n          }}\r\n        >\r\n          <a  href={Paths.None}>\r\n            <span className={CSSProps.NavBar.DropdownText}>Nederlands</span>\r\n          </a>\r\n        </li>\r\n        <li id={CSSProps.NavBar.EN} className={CSSProps.NavBar.DropdownItem }\r\n          onClick={() => {\r\n            i18n.changeLanguage(CSSProps.NavBar.EN);\r\n            CacheLanguage(CSSProps.NavBar.EN);\r\n            \r\n          }}\r\n        >\r\n          <a  href={Paths.None}>\r\n            <span className={CSSProps.NavBar.DropdownText}>English</span>\r\n          </a>\r\n        </li>\r\n      </ul>\r\n    </li>\r\n  );\r\n};\r\n\r\nfunction CacheLanguage(language) {\r\n  var selectedLanguage = localStorage.getItem(LocalStorageProps.Language);\r\n  alert(selectedLanguage);\r\n  alert(Validator.prototype.isEmpty('undefined'));\r\n  if(Validator.prototype.isEmpty(language) === false){\r\n    const selectedButton = document.getElementById(selectedLanguage);\r\n    selectedButton.style.cssText=``;\r\n  }\r\n  \r\n  const newSelectedButton = document.getElementById(language);\r\n  newSelectedButton.style.cssText='border-bottom: 2px solid red;';\r\n  localStorage.removeItem(LocalStorageProps.Language);\r\n  localStorage.setItem(LocalStorageProps.Language, language);\r\n}\r\nexport default LanguageControl;\r\n"]},"metadata":{},"sourceType":"module"}