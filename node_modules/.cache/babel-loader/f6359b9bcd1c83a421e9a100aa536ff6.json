{"ast":null,"code":"import CSSProps from \"../data/constants/CSSProps\";\nimport LocalStorageProps from \"../data/constants/LocalStorageProps\";\nimport { Validator } from \"../tools/Validator\";\nexport class Base {\n  SwitchPage(selectedPage) {}\n\n  SetSelectedPageButton(id, selectedPage) {\n    const button = document.getElementById(id);\n\n    if (button) {\n      button.style.cssText = CSSProps.Style.NavDeselected;\n    }\n\n    if (selectedPage === id) {\n      button.style.cssText = CSSProps.Style.NavSelected;\n      let cachedVolumeValue = localStorage.getItem(LocalStorageProps.Volume);\n      let playSound = false;\n\n      if (Validator.prototype.isEmpty(cachedVolumeValue)) {\n        localStorage.setItem(LocalStorageProps.Volume, CSSProps.UserControl.VolumeOn);\n        playSound = true;\n      }\n\n      playSound = localStorage.getItem(LocalStorageProps.Volume) === CSSProps.UserControl.VolumeOn ? true : false;\n\n      if (playSound) {\n        document.getElementById(id + CSSProps.ID.Audio).play();\n      }\n    }\n  }\n\n}","map":{"version":3,"sources":["C:/Users/nlmsc/Documents/React/emma/src/components/Base.js"],"names":["CSSProps","LocalStorageProps","Validator","Base","SwitchPage","selectedPage","SetSelectedPageButton","id","button","document","getElementById","style","cssText","Style","NavDeselected","NavSelected","cachedVolumeValue","localStorage","getItem","Volume","playSound","prototype","isEmpty","setItem","UserControl","VolumeOn","ID","Audio","play"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,4BAArB;AACA,OAAOC,iBAAP,MAA8B,qCAA9B;AACA,SAASC,SAAT,QAA0B,oBAA1B;AAEA,OAAO,MAAMC,IAAN,CAAW;AAChBC,EAAAA,UAAU,CAACC,YAAD,EAAe,CAExB;;AAEDC,EAAAA,qBAAqB,CAACC,EAAD,EAAKF,YAAL,EAAoB;AACvC,UAAMG,MAAM,GAAGC,QAAQ,CAACC,cAAT,CAAwBH,EAAxB,CAAf;;AACA,QAAIC,MAAJ,EAAY;AACVA,MAAAA,MAAM,CAACG,KAAP,CAAaC,OAAb,GAAuBZ,QAAQ,CAACa,KAAT,CAAeC,aAAtC;AACD;;AAED,QAAIT,YAAY,KAAKE,EAArB,EAAyB;AACvBC,MAAAA,MAAM,CAACG,KAAP,CAAaC,OAAb,GAAuBZ,QAAQ,CAACa,KAAT,CAAeE,WAAtC;AAEA,UAAIC,iBAAiB,GAAGC,YAAY,CAACC,OAAb,CAAqBjB,iBAAiB,CAACkB,MAAvC,CAAxB;AACA,UAAIC,SAAS,GAAG,KAAhB;;AACA,UAAIlB,SAAS,CAACmB,SAAV,CAAoBC,OAApB,CAA4BN,iBAA5B,CAAJ,EAAoD;AAClDC,QAAAA,YAAY,CAACM,OAAb,CACEtB,iBAAiB,CAACkB,MADpB,EAEEnB,QAAQ,CAACwB,WAAT,CAAqBC,QAFvB;AAIAL,QAAAA,SAAS,GAAG,IAAZ;AACD;;AAEDA,MAAAA,SAAS,GACPH,YAAY,CAACC,OAAb,CAAqBjB,iBAAiB,CAACkB,MAAvC,MACAnB,QAAQ,CAACwB,WAAT,CAAqBC,QADrB,GAEI,IAFJ,GAGI,KAJN;;AAMA,UAAIL,SAAJ,EAAe;AACbX,QAAAA,QAAQ,CAACC,cAAT,CAAwBH,EAAE,GAAGP,QAAQ,CAAC0B,EAAT,CAAYC,KAAzC,EAAgDC,IAAhD;AACD;AACF;AACF;;AAlCe","sourcesContent":["import CSSProps from \"../data/constants/CSSProps\";\r\nimport LocalStorageProps from \"../data/constants/LocalStorageProps\";\r\nimport { Validator } from \"../tools/Validator\";\r\n\r\nexport class Base {\r\n  SwitchPage(selectedPage) {\r\n\r\n  }\r\n\r\n  SetSelectedPageButton(id, selectedPage ) {\r\n    const button = document.getElementById(id);\r\n    if (button) {\r\n      button.style.cssText = CSSProps.Style.NavDeselected;\r\n    }\r\n\r\n    if (selectedPage === id) {\r\n      button.style.cssText = CSSProps.Style.NavSelected;\r\n\r\n      let cachedVolumeValue = localStorage.getItem(LocalStorageProps.Volume);\r\n      let playSound = false;\r\n      if (Validator.prototype.isEmpty(cachedVolumeValue)) {\r\n        localStorage.setItem(\r\n          LocalStorageProps.Volume,\r\n          CSSProps.UserControl.VolumeOn\r\n        );\r\n        playSound = true;\r\n      }\r\n\r\n      playSound =\r\n        localStorage.getItem(LocalStorageProps.Volume) ===\r\n        CSSProps.UserControl.VolumeOn\r\n          ? true\r\n          : false;\r\n\r\n      if (playSound) {\r\n        document.getElementById(id + CSSProps.ID.Audio).play();\r\n      }\r\n    }\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}