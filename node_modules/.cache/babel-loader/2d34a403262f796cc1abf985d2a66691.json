{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nlmsc\\\\Documents\\\\React\\\\emma\\\\src\\\\components\\\\navbar\\\\controls\\\\ThemeControl.js\",\n    _s = $RefreshSig$();\n\nimport \"../Navbar.css\";\nimport { ReactComponent as Theme } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../../icons/Adjust.svg\";\nimport CSSProps from \"../../../data/constants/CSSProps\";\nimport DictionaryProps from \"../../../data/constants/DictionaryProps\";\nimport LocalStorageProps from \"../../../data/constants/LocalStorageProps\";\nimport React, { useEffect } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport Paths from \"../../../data/constants/Paths\";\nimport AppSettings from \"../../../data/AppSettings\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ThemeControl = () => {\n  _s();\n\n  const [t] = useTranslation(AppSettings.TranslationFilename);\n  var alterToggleName = DictionaryProps.Alternative;\n  useEffect(() => {\n    // DOM Elements\n    const darkButton = document.getElementById(CSSProps.Style.Dark);\n    const lightButton = document.getElementById(CSSProps.Style.Light);\n    const solarButton = document.getElementById(CSSProps.Style.Alternative);\n    const body = document.body; // Apply the cached theme on reload\n\n    const theme = localStorage.getItem(LocalStorageProps.Theme);\n    const isSolar = localStorage.getItem(LocalStorageProps.IsSolar);\n\n    if (theme) {\n      body.classList.add(theme);\n      isSolar && body.classList.add(CSSProps.Style.Alternative);\n    }\n\n    if (isSolar) {\n      solarButton.style.cssText = CSSProps.Style.BGWhite;\n      solarButton.innerText = t(DictionaryProps.Normalize);\n    } // Button Event Handlers\n\n\n    darkButton.onclick = () => {\n      body.classList.replace(CSSProps.Style.Light, CSSProps.Style.Dark);\n      localStorage.setItem(LocalStorageProps.Theme, CSSProps.Style.Dark);\n\n      if (body.classList.contains(CSSProps.Style.Alternative)) {\n        solarButton.style.cssText = CSSProps.Style.BGDark;\n      } else {\n        solarButton.style.cssText = CSSProps.Style.BGPrimary;\n      }\n    };\n\n    lightButton.onclick = () => {\n      body.classList.replace(CSSProps.Style.Dark, CSSProps.Style.Light);\n      localStorage.setItem(LocalStorageProps.Theme, CSSProps.Style.Light);\n\n      if (body.classList.contains(CSSProps.Style.Alternative)) {\n        solarButton.style.cssText = CSSProps.Style.BGWhite;\n      } else {\n        solarButton.style.cssText = CSSProps.Style.BGPrimary;\n      }\n    };\n\n    solarButton.onclick = () => {\n      if (body.classList.contains(CSSProps.Style.Alternative)) {\n        body.classList.remove(CSSProps.Style.Alternative);\n        solarButton.style.cssText = CSSProps.Style.BGPrimary;\n        solarButton.innerText = t(DictionaryProps.Alternative);\n        localStorage.removeItem(LocalStorageProps.IsSolar);\n      } else {\n        if (body.classList.contains(CSSProps.Style.Light)) {\n          solarButton.style.cssText = CSSProps.Style.BGWhite;\n        } else {\n          solarButton.style.cssText = CSSProps.Style.BGDark;\n        }\n\n        body.classList.add(CSSProps.Style.Alternative);\n        solarButton.innerText = t(DictionaryProps.Normalize);\n        localStorage.setItem(LocalStorageProps.IsSolar, true);\n      }\n    };\n  });\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    className: CSSProps.NavBar.Item,\n    children: [/*#__PURE__*/_jsxDEV(\"a\", {\n      className: CSSProps.NavBar.Link,\n      href: Paths.Default,\n      children: [/*#__PURE__*/_jsxDEV(Theme, {\n        className: CSSProps.NavBar.Icon\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: CSSProps.NavBar.Text,\n        children: t(DictionaryProps.Theme)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: CSSProps.NavBar.Dropdown,\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        className: CSSProps.NavBar.DropdownItem,\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          id: CSSProps.Style.Light,\n          href: Paths.Default,\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: CSSProps.NavBar.DropdownText,\n            children: t(DictionaryProps.Light)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        className: CSSProps.NavBar.DropdownItem,\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          id: CSSProps.Style.Dark,\n          href: Paths.Default,\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: CSSProps.NavBar.DropdownText,\n            children: t(DictionaryProps.Dark)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        className: CSSProps.NavBar.DropdownItem,\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          id: CSSProps.Style.Alternative,\n          href: Paths.Default,\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: CSSProps.NavBar.DropdownText,\n            children: alterToggleName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ThemeControl, \"B8qyT/3l6D2WGGKonNkyVU+BfIs=\", false, function () {\n  return [useTranslation];\n});\n\n_c = ThemeControl;\nexport default ThemeControl;\n\nvar _c;\n\n$RefreshReg$(_c, \"ThemeControl\");","map":{"version":3,"sources":["C:/Users/nlmsc/Documents/React/emma/src/components/navbar/controls/ThemeControl.js"],"names":["CSSProps","DictionaryProps","LocalStorageProps","React","useEffect","useTranslation","Paths","AppSettings","ThemeControl","t","TranslationFilename","alterToggleName","Alternative","darkButton","document","getElementById","Style","Dark","lightButton","Light","solarButton","body","theme","localStorage","getItem","Theme","isSolar","IsSolar","classList","add","style","cssText","BGWhite","innerText","Normalize","onclick","replace","setItem","contains","BGDark","BGPrimary","remove","removeItem","NavBar","Item","Link","Default","Icon","Text","Dropdown","DropdownItem","DropdownText"],"mappings":"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","sourcesContent":["import \"../Navbar.css\";\r\nimport { ReactComponent as Theme } from \"../../../icons/Adjust.svg\";\r\nimport CSSProps from \"../../../data/constants/CSSProps\";\r\nimport DictionaryProps from \"../../../data/constants/DictionaryProps\";\r\nimport LocalStorageProps from \"../../../data/constants/LocalStorageProps\";\r\nimport React, { useEffect } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport Paths from \"../../../data/constants/Paths\";\r\nimport AppSettings from \"../../../data/AppSettings\";\r\n\r\nconst ThemeControl = () => {\r\n  const [t] = useTranslation(AppSettings.TranslationFilename);\r\n  var alterToggleName = DictionaryProps.Alternative;\r\n  useEffect(() => {\r\n    // DOM Elements\r\n\r\n    const darkButton = document.getElementById(CSSProps.Style.Dark);\r\n    const lightButton = document.getElementById(CSSProps.Style.Light);\r\n    const solarButton = document.getElementById(CSSProps.Style.Alternative);\r\n    const body = document.body;\r\n\r\n    // Apply the cached theme on reload\r\n\r\n    const theme = localStorage.getItem(LocalStorageProps.Theme);\r\n    const isSolar = localStorage.getItem(LocalStorageProps.IsSolar);\r\n\r\n    if (theme) {\r\n      body.classList.add(theme);\r\n      isSolar && body.classList.add(CSSProps.Style.Alternative);\r\n    }\r\n\r\n    if (isSolar) {\r\n      solarButton.style.cssText = CSSProps.Style.BGWhite;\r\n      solarButton.innerText = t(DictionaryProps.Normalize);\r\n    }\r\n\r\n    // Button Event Handlers\r\n\r\n    darkButton.onclick = () => {\r\n      body.classList.replace(CSSProps.Style.Light, CSSProps.Style.Dark);\r\n      localStorage.setItem(LocalStorageProps.Theme, CSSProps.Style.Dark);\r\n\r\n      if (body.classList.contains(CSSProps.Style.Alternative)) {\r\n        solarButton.style.cssText = CSSProps.Style.BGDark;\r\n      } else {\r\n        solarButton.style.cssText = CSSProps.Style.BGPrimary;\r\n      }\r\n    };\r\n\r\n    lightButton.onclick = () => {\r\n      body.classList.replace(CSSProps.Style.Dark, CSSProps.Style.Light);\r\n      localStorage.setItem(LocalStorageProps.Theme, CSSProps.Style.Light);\r\n\r\n      if (body.classList.contains(CSSProps.Style.Alternative)) {\r\n        solarButton.style.cssText = CSSProps.Style.BGWhite;\r\n      } else {\r\n        solarButton.style.cssText = CSSProps.Style.BGPrimary;\r\n      }\r\n    };\r\n\r\n    solarButton.onclick = () => {\r\n      if (body.classList.contains(CSSProps.Style.Alternative)) {\r\n        body.classList.remove(CSSProps.Style.Alternative);\r\n        solarButton.style.cssText = CSSProps.Style.BGPrimary;\r\n        solarButton.innerText = t(DictionaryProps.Alternative);\r\n        localStorage.removeItem(LocalStorageProps.IsSolar);\r\n      } else {\r\n        if (body.classList.contains(CSSProps.Style.Light)) {\r\n          solarButton.style.cssText = CSSProps.Style.BGWhite;\r\n        } else {\r\n          solarButton.style.cssText = CSSProps.Style.BGDark;\r\n        }\r\n        body.classList.add(CSSProps.Style.Alternative);\r\n        solarButton.innerText = t(DictionaryProps.Normalize);\r\n\r\n        localStorage.setItem(LocalStorageProps.IsSolar, true);\r\n      }\r\n    };\r\n  });\r\n\r\n  return (\r\n    <li className={CSSProps.NavBar.Item }>\r\n      <a className={CSSProps.NavBar.Link} href={Paths.Default}>\r\n        <Theme className={CSSProps.NavBar.Icon}></Theme>\r\n        <span className={CSSProps.NavBar.Text}>{t(DictionaryProps.Theme)}</span>\r\n      </a>\r\n      <ul className={CSSProps.NavBar.Dropdown}>\r\n        <li className={CSSProps.NavBar.DropdownItem}>\r\n          <a id={CSSProps.Style.Light} href={Paths.Default}>\r\n            <span className={CSSProps.NavBar.DropdownText}>{t(DictionaryProps.Light)}</span>\r\n          </a>\r\n        </li>\r\n        <li className={CSSProps.NavBar.DropdownItem}>\r\n          <a id={CSSProps.Style.Dark} href={Paths.Default}>\r\n            <span className={CSSProps.NavBar.DropdownText}>{t(DictionaryProps.Dark)}</span>\r\n          </a>\r\n        </li>\r\n        <li className={CSSProps.NavBar.DropdownItem}>\r\n          <a id={CSSProps.Style.Alternative} href={Paths.Default}>\r\n            <span className={CSSProps.NavBar.DropdownText}>{alterToggleName}</span>\r\n          </a>\r\n        </li>\r\n      </ul>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default ThemeControl;\r\n"]},"metadata":{},"sourceType":"module"}