{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nlmsc\\\\Documents\\\\React\\\\emma\\\\src\\\\components\\\\sidebar\\\\Sidebar.js\",\n    _s = $RefreshSig$();\n\nimport \"./Sidebar.css\";\nimport { ReactComponent as Arrow } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../icons/Arrow.svg\";\nimport Paths from \"../../data/constants/Paths\";\nimport CSSProps from \"../../data/constants/CSSProps\";\nimport DictionaryProps from \"../../data/constants/DictionaryProps\";\nimport AppSettings from \"../../data/AppSettings\";\nimport { useTranslation } from \"react-i18next\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Sidebar = () => {\n  _s();\n\n  const [t] = useTranslation(AppSettings.TranslationFilename);\n  return /*#__PURE__*/_jsxDEV(\"nav\", {\n    className: CSSProps.SideBar.Bar,\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: CSSProps.SideBar.Navigation,\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        className: CSSProps.SideBar.Logo,\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: Paths.None,\n          className: CSSProps.SideBar.Link,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: CSSProps.SideBar.LinkText + CSSProps.SideBar.LogoText,\n            children: AppSettings.ApplicationName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Arrow, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(NavItem, {\n        path: Paths.Default,\n        text: t(DictionaryProps.Dashboard),\n        onClickPageID: CSSProps.ID.Dashboard,\n        iconID: CSSProps.ID.Dashboard\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(NavItem, {\n        path: Paths.Default,\n        text: t(DictionaryProps.Tasks),\n        onClickPageID: CSSProps.ID.Tasks,\n        iconID: CSSProps.ID.Tasks\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(NavItem, {\n        path: Paths.Default,\n        text: t(DictionaryProps.Organisation),\n        onClickPageID: CSSProps.ID.Organisation,\n        iconID: CSSProps.ID.Organisation\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(NavItem, {\n        path: Paths.Default,\n        text: t(DictionaryProps.Settings),\n        onClickPageID: CSSProps.ID.Settings,\n        iconID: CSSProps.ID.Settings\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Sidebar, \"8/i+n86j1+Aux75AhmzAod2S5k8=\", false, function () {\n  return [useTranslation];\n});\n\n_c = Sidebar;\nexport default Sidebar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Sidebar\");","map":{"version":3,"sources":["C:/Users/nlmsc/Documents/React/emma/src/components/sidebar/Sidebar.js"],"names":["Paths","CSSProps","DictionaryProps","AppSettings","useTranslation","Sidebar","t","TranslationFilename","SideBar","Bar","Navigation","Logo","None","Link","LinkText","LogoText","ApplicationName","Default","Dashboard","ID","Tasks","Organisation","Settings"],"mappings":";;;AAAA,OAAO,eAAP;;AAEA,OAAOA,KAAP,MAAkB,4BAAlB;AACA,OAAOC,QAAP,MAAqB,+BAArB;AACA,OAAOC,eAAP,MAA4B,sCAA5B;AACA,OAAOC,WAAP,MAAwB,wBAAxB;AACA,SAASC,cAAT,QAA+B,eAA/B;;;AAEA,MAAMC,OAAO,GAAG,MAAM;AAAA;;AACpB,QAAM,CAACC,CAAD,IAAMF,cAAc,CAACD,WAAW,CAACI,mBAAb,CAA1B;AAEA,sBACE;AAAK,IAAA,SAAS,EAAEN,QAAQ,CAACO,OAAT,CAAiBC,GAAjC;AAAA,2BACE;AAAI,MAAA,SAAS,EAAER,QAAQ,CAACO,OAAT,CAAiBE,UAAhC;AAAA,8BACE;AAAI,QAAA,SAAS,EAAET,QAAQ,CAACO,OAAT,CAAiBG,IAAhC;AAAA,+BACE;AAAG,UAAA,IAAI,EAAEX,KAAK,CAACY,IAAf;AAAqB,UAAA,SAAS,EAAEX,QAAQ,CAACO,OAAT,CAAiBK,IAAjD;AAAA,kCACE;AAAM,YAAA,SAAS,EAAEZ,QAAQ,CAACO,OAAT,CAAiBM,QAAjB,GAA4Bb,QAAQ,CAACO,OAAT,CAAiBO,QAA9D;AAAA,sBAAyEZ,WAAW,CAACa;AAArF;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAOE,QAAC,OAAD;AAAS,QAAA,IAAI,EAAEhB,KAAK,CAACiB,OAArB;AAA8B,QAAA,IAAI,EAAEX,CAAC,CAACJ,eAAe,CAACgB,SAAjB,CAArC;AAAkE,QAAA,aAAa,EAAEjB,QAAQ,CAACkB,EAAT,CAAYD,SAA7F;AAAwG,QAAA,MAAM,EAAEjB,QAAQ,CAACkB,EAAT,CAAYD;AAA5H;AAAA;AAAA;AAAA;AAAA,cAPF,eAQE,QAAC,OAAD;AAAS,QAAA,IAAI,EAAElB,KAAK,CAACiB,OAArB;AAA8B,QAAA,IAAI,EAAEX,CAAC,CAACJ,eAAe,CAACkB,KAAjB,CAArC;AAA8D,QAAA,aAAa,EAAEnB,QAAQ,CAACkB,EAAT,CAAYC,KAAzF;AAAgG,QAAA,MAAM,EAAEnB,QAAQ,CAACkB,EAAT,CAAYC;AAApH;AAAA;AAAA;AAAA;AAAA,cARF,eASE,QAAC,OAAD;AAAS,QAAA,IAAI,EAAEpB,KAAK,CAACiB,OAArB;AAA8B,QAAA,IAAI,EAAEX,CAAC,CAACJ,eAAe,CAACmB,YAAjB,CAArC;AAAqE,QAAA,aAAa,EAAEpB,QAAQ,CAACkB,EAAT,CAAYE,YAAhG;AAA8G,QAAA,MAAM,EAAEpB,QAAQ,CAACkB,EAAT,CAAYE;AAAlI;AAAA;AAAA;AAAA;AAAA,cATF,eAUE,QAAC,OAAD;AAAS,QAAA,IAAI,EAAErB,KAAK,CAACiB,OAArB;AAA8B,QAAA,IAAI,EAAEX,CAAC,CAACJ,eAAe,CAACoB,QAAjB,CAArC;AAAiE,QAAA,aAAa,EAAErB,QAAQ,CAACkB,EAAT,CAAYG,QAA5F;AAAsG,QAAA,MAAM,EAAErB,QAAQ,CAACkB,EAAT,CAAYG;AAA1H;AAAA;AAAA;AAAA;AAAA,cAVF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD,CAnBD;;GAAMjB,O;UACQD,c;;;KADRC,O;AAqBN,eAAeA,OAAf","sourcesContent":["import \"./Sidebar.css\";\r\nimport { ReactComponent as Arrow } from \"../../icons/Arrow.svg\";\r\nimport Paths from \"../../data/constants/Paths\";\r\nimport CSSProps from \"../../data/constants/CSSProps\";\r\nimport DictionaryProps from \"../../data/constants/DictionaryProps\";\r\nimport AppSettings from \"../../data/AppSettings\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nconst Sidebar = () => {\r\n  const [t] = useTranslation(AppSettings.TranslationFilename);\r\n\r\n  return (\r\n    <nav className={CSSProps.SideBar.Bar}>\r\n      <ul className={CSSProps.SideBar.Navigation}>\r\n        <li className={CSSProps.SideBar.Logo} >\r\n          <a href={Paths.None} className={CSSProps.SideBar.Link}>\r\n            <span className={CSSProps.SideBar.LinkText + CSSProps.SideBar.LogoText}>{AppSettings.ApplicationName}</span>\r\n            <Arrow />\r\n          </a>\r\n        </li>\r\n        <NavItem path={Paths.Default} text={t(DictionaryProps.Dashboard)} onClickPageID={CSSProps.ID.Dashboard} iconID={CSSProps.ID.Dashboard}/>\r\n        <NavItem path={Paths.Default} text={t(DictionaryProps.Tasks)} onClickPageID={CSSProps.ID.Tasks} iconID={CSSProps.ID.Tasks}/>\r\n        <NavItem path={Paths.Default} text={t(DictionaryProps.Organisation)} onClickPageID={CSSProps.ID.Organisation} iconID={CSSProps.ID.Organisation}/>\r\n        <NavItem path={Paths.Default} text={t(DictionaryProps.Settings)} onClickPageID={CSSProps.ID.Settings} iconID={CSSProps.ID.Settings}/>\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n"]},"metadata":{},"sourceType":"module"}