{"ast":null,"code":"import CSSProps from \"../data/constants/CSSProps\";\nexport class Base {\n  SwitchPage(selectedPage) {\n    this.SetSelectedPageButton(CSSProps.ID.Home, selectedPage);\n    this.SetSelectedPageButton(CSSProps.ID.ServiceDesk, selectedPage);\n    this.SetSelectedPageButton(CSSProps.ID.About, selectedPage);\n    this.SetSelectedPageButton(CSSProps.ID.Dashboard, selectedPage);\n    this.SetSelectedPageButton(CSSProps.ID.Tasks, selectedPage);\n    this.SetSelectedPageButton(CSSProps.ID.Organisation, selectedPage);\n    this.SetSelectedPageButton(CSSProps.ID.Setting, selectedPage);\n    this.SetSelectedPageButton(CSSProps.ID.Login, selectedPage);\n  }\n\n  SetSelectedPageButton(id, selectedPage) {\n    const button = document.getElementById(id);\n\n    if (button) {\n      button.style.cssText = CSSProps.Style.NavDeselected;\n    }\n\n    if (selectedPage === id) {\n      button.style.cssText = CSSProps.Style.NavSelected;\n      let cachedVolumeValue = localStorage.getItem(LocalStorageProps.Volume);\n      let playSound = false;\n\n      if (Validator.prototype.isEmpty(cachedVolumeValue)) {\n        localStorage.setItem(LocalStorageProps.Volume, CSSProps.NavBar.VolumeOn);\n        playSound = true;\n      }\n\n      playSound = localStorage.getItem(LocalStorageProps.Volume) === CSSProps.NavBar.VolumeOn ? true : false;\n\n      if (playSound) {\n        document.getElementById(id + CSSProps.ID.Audio).play();\n      }\n    }\n  }\n\n}","map":{"version":3,"sources":["C:/Users/nlmsc/Documents/React/emma/src/components/Base.js"],"names":["CSSProps","Base","SwitchPage","selectedPage","SetSelectedPageButton","ID","Home","ServiceDesk","About","Dashboard","Tasks","Organisation","Setting","Login","id","button","document","getElementById","style","cssText","Style","NavDeselected","NavSelected","cachedVolumeValue","localStorage","getItem","LocalStorageProps","Volume","playSound","Validator","prototype","isEmpty","setItem","NavBar","VolumeOn","Audio","play"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,4BAArB;AAEA,OAAO,MAAMC,IAAN,CAAW;AAChBC,EAAAA,UAAU,CAACC,YAAD,EAAe;AACvB,SAAKC,qBAAL,CAA2BJ,QAAQ,CAACK,EAAT,CAAYC,IAAvC,EAA6CH,YAA7C;AACA,SAAKC,qBAAL,CAA2BJ,QAAQ,CAACK,EAAT,CAAYE,WAAvC,EAAoDJ,YAApD;AACA,SAAKC,qBAAL,CAA2BJ,QAAQ,CAACK,EAAT,CAAYG,KAAvC,EAA8CL,YAA9C;AACA,SAAKC,qBAAL,CAA2BJ,QAAQ,CAACK,EAAT,CAAYI,SAAvC,EAAkDN,YAAlD;AACA,SAAKC,qBAAL,CAA2BJ,QAAQ,CAACK,EAAT,CAAYK,KAAvC,EAA8CP,YAA9C;AACA,SAAKC,qBAAL,CAA2BJ,QAAQ,CAACK,EAAT,CAAYM,YAAvC,EAAqDR,YAArD;AACA,SAAKC,qBAAL,CAA2BJ,QAAQ,CAACK,EAAT,CAAYO,OAAvC,EAAgDT,YAAhD;AACA,SAAKC,qBAAL,CAA2BJ,QAAQ,CAACK,EAAT,CAAYQ,KAAvC,EAA8CV,YAA9C;AACD;;AAEDC,EAAAA,qBAAqB,CAACU,EAAD,EAAKX,YAAL,EAAmB;AACtC,UAAMY,MAAM,GAAGC,QAAQ,CAACC,cAAT,CAAwBH,EAAxB,CAAf;;AACA,QAAIC,MAAJ,EAAY;AACVA,MAAAA,MAAM,CAACG,KAAP,CAAaC,OAAb,GAAuBnB,QAAQ,CAACoB,KAAT,CAAeC,aAAtC;AACD;;AAED,QAAIlB,YAAY,KAAKW,EAArB,EAAyB;AACvBC,MAAAA,MAAM,CAACG,KAAP,CAAaC,OAAb,GAAuBnB,QAAQ,CAACoB,KAAT,CAAeE,WAAtC;AAEA,UAAIC,iBAAiB,GAAGC,YAAY,CAACC,OAAb,CAAqBC,iBAAiB,CAACC,MAAvC,CAAxB;AACA,UAAIC,SAAS,GAAG,KAAhB;;AACA,UAAIC,SAAS,CAACC,SAAV,CAAoBC,OAApB,CAA4BR,iBAA5B,CAAJ,EAAoD;AAClDC,QAAAA,YAAY,CAACQ,OAAb,CACEN,iBAAiB,CAACC,MADpB,EAEE3B,QAAQ,CAACiC,MAAT,CAAgBC,QAFlB;AAIAN,QAAAA,SAAS,GAAG,IAAZ;AACD;;AAEDA,MAAAA,SAAS,GACPJ,YAAY,CAACC,OAAb,CAAqBC,iBAAiB,CAACC,MAAvC,MACA3B,QAAQ,CAACiC,MAAT,CAAgBC,QADhB,GAEI,IAFJ,GAGI,KAJN;;AAMA,UAAIN,SAAJ,EAAe;AACbZ,QAAAA,QAAQ,CAACC,cAAT,CAAwBH,EAAE,GAAGd,QAAQ,CAACK,EAAT,CAAY8B,KAAzC,EAAgDC,IAAhD;AACD;AACF;AACF;;AAzCe","sourcesContent":["import CSSProps from \"../data/constants/CSSProps\";\r\n\r\nexport class Base {\r\n  SwitchPage(selectedPage) {\r\n    this.SetSelectedPageButton(CSSProps.ID.Home, selectedPage);\r\n    this.SetSelectedPageButton(CSSProps.ID.ServiceDesk, selectedPage);\r\n    this.SetSelectedPageButton(CSSProps.ID.About, selectedPage);\r\n    this.SetSelectedPageButton(CSSProps.ID.Dashboard, selectedPage);\r\n    this.SetSelectedPageButton(CSSProps.ID.Tasks, selectedPage);\r\n    this.SetSelectedPageButton(CSSProps.ID.Organisation, selectedPage);\r\n    this.SetSelectedPageButton(CSSProps.ID.Setting, selectedPage);\r\n    this.SetSelectedPageButton(CSSProps.ID.Login, selectedPage);\r\n  }\r\n\r\n  SetSelectedPageButton(id, selectedPage) {\r\n    const button = document.getElementById(id);\r\n    if (button) {\r\n      button.style.cssText = CSSProps.Style.NavDeselected;\r\n    }\r\n\r\n    if (selectedPage === id) {\r\n      button.style.cssText = CSSProps.Style.NavSelected;\r\n\r\n      let cachedVolumeValue = localStorage.getItem(LocalStorageProps.Volume);\r\n      let playSound = false;\r\n      if (Validator.prototype.isEmpty(cachedVolumeValue)) {\r\n        localStorage.setItem(\r\n          LocalStorageProps.Volume,\r\n          CSSProps.NavBar.VolumeOn\r\n        );\r\n        playSound = true;\r\n      }\r\n\r\n      playSound =\r\n        localStorage.getItem(LocalStorageProps.Volume) ===\r\n        CSSProps.NavBar.VolumeOn\r\n          ? true\r\n          : false;\r\n\r\n      if (playSound) {\r\n        document.getElementById(id + CSSProps.ID.Audio).play();\r\n      }\r\n    }\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}