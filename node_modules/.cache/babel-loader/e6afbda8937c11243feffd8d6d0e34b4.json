{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nlmsc\\\\Documents\\\\React\\\\emma\\\\src\\\\App.js\";\nimport Navbar from './components/Navbar';\nimport Header from './components/Header';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst darkButton = document.getElementById('dark');\nconst lightButton = document.getElementById('light');\nconst solarButton = document.getElementById('solar');\nconst body = document.body; // Apply the cached theme on reload\n\nconst theme = localStorage.getItem('theme');\nconst isSolar = localStorage.getItem('isSolar');\n\nif (theme) {\n  body.classList.add(theme);\n  isSolar && body.classList.add('solar');\n} // Button Event Handlers\n\n\ndarkButton.onclick = () => {\n  body.classList.replace('light', 'dark');\n  localStorage.setItem('theme', 'dark');\n};\n\nlightButton.onclick = () => {\n  body.classList.replace('dark', 'light');\n  localStorage.setItem('theme', 'light');\n};\n\nsolarButton.onclick = () => {\n  if (body.classList.contains('solar')) {\n    body.classList.remove('solar');\n    solarButton.style.cssText = `\n      --bg-solar: var(--yellow);\n    `;\n    solarButton.innerText = 'solarize';\n    localStorage.removeItem('isSolar');\n  } else {\n    solarButton.style.cssText = `\n      --bg-solar: white;\n    `;\n    body.classList.add('solar');\n    solarButton.innerText = 'normalize';\n    localStorage.setItem('isSolar', true);\n  }\n};\n\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/nlmsc/Documents/React/emma/src/App.js"],"names":["Navbar","Header","darkButton","document","getElementById","lightButton","solarButton","body","theme","localStorage","getItem","isSolar","classList","add","onclick","replace","setItem","contains","remove","style","cssText","innerText","removeItem","App"],"mappings":";AAAA,OAAOA,MAAP,MAAmB,qBAAnB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;;AACA,MAAMC,UAAU,GAAGC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAnB;AACA,MAAMC,WAAW,GAAGF,QAAQ,CAACC,cAAT,CAAwB,OAAxB,CAApB;AACA,MAAME,WAAW,GAAGH,QAAQ,CAACC,cAAT,CAAwB,OAAxB,CAApB;AACA,MAAMG,IAAI,GAAGJ,QAAQ,CAACI,IAAtB,C,CAGA;;AAEA,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;AACA,MAAMC,OAAO,GAAGF,YAAY,CAACC,OAAb,CAAqB,SAArB,CAAhB;;AAEA,IAAIF,KAAJ,EAAW;AACTD,EAAAA,IAAI,CAACK,SAAL,CAAeC,GAAf,CAAmBL,KAAnB;AACAG,EAAAA,OAAO,IAAIJ,IAAI,CAACK,SAAL,CAAeC,GAAf,CAAmB,OAAnB,CAAX;AACD,C,CAED;;;AAEAX,UAAU,CAACY,OAAX,GAAqB,MAAM;AACzBP,EAAAA,IAAI,CAACK,SAAL,CAAeG,OAAf,CAAuB,OAAvB,EAAgC,MAAhC;AACAN,EAAAA,YAAY,CAACO,OAAb,CAAqB,OAArB,EAA8B,MAA9B;AACD,CAHD;;AAKAX,WAAW,CAACS,OAAZ,GAAsB,MAAM;AAC1BP,EAAAA,IAAI,CAACK,SAAL,CAAeG,OAAf,CAAuB,MAAvB,EAA+B,OAA/B;AAEAN,EAAAA,YAAY,CAACO,OAAb,CAAqB,OAArB,EAA8B,OAA9B;AACD,CAJD;;AAMAV,WAAW,CAACQ,OAAZ,GAAsB,MAAM;AAE1B,MAAIP,IAAI,CAACK,SAAL,CAAeK,QAAf,CAAwB,OAAxB,CAAJ,EAAsC;AAEpCV,IAAAA,IAAI,CAACK,SAAL,CAAeM,MAAf,CAAsB,OAAtB;AACAZ,IAAAA,WAAW,CAACa,KAAZ,CAAkBC,OAAlB,GAA6B;AACjC;AACA,KAFI;AAIAd,IAAAA,WAAW,CAACe,SAAZ,GAAwB,UAAxB;AAEAZ,IAAAA,YAAY,CAACa,UAAb,CAAwB,SAAxB;AAED,GAXD,MAWO;AAELhB,IAAAA,WAAW,CAACa,KAAZ,CAAkBC,OAAlB,GAA6B;AACjC;AACA,KAFI;AAIAb,IAAAA,IAAI,CAACK,SAAL,CAAeC,GAAf,CAAmB,OAAnB;AACAP,IAAAA,WAAW,CAACe,SAAZ,GAAwB,WAAxB;AAEAZ,IAAAA,YAAY,CAACO,OAAb,CAAqB,SAArB,EAAgC,IAAhC;AACD;AACF,CAxBD;;AAyBA,SAASO,GAAT,GAAe;AAEb,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD;;KARQA,G;AAUT,eAAeA,GAAf","sourcesContent":["import Navbar from './components/Navbar'\nimport Header from './components/Header'\nconst darkButton = document.getElementById('dark');\nconst lightButton = document.getElementById('light');\nconst solarButton = document.getElementById('solar');\nconst body = document.body;\n\n\n// Apply the cached theme on reload\n\nconst theme = localStorage.getItem('theme');\nconst isSolar = localStorage.getItem('isSolar');\n\nif (theme) {\n  body.classList.add(theme);\n  isSolar && body.classList.add('solar');\n}\n\n// Button Event Handlers\n\ndarkButton.onclick = () => {\n  body.classList.replace('light', 'dark');\n  localStorage.setItem('theme', 'dark');\n};\n\nlightButton.onclick = () => {\n  body.classList.replace('dark', 'light');\n\n  localStorage.setItem('theme', 'light');\n};\n\nsolarButton.onclick = () => {\n\n  if (body.classList.contains('solar')) {\n    \n    body.classList.remove('solar');\n    solarButton.style.cssText = `\n      --bg-solar: var(--yellow);\n    `\n\n    solarButton.innerText = 'solarize';\n\n    localStorage.removeItem('isSolar');\n\n  } else {\n\n    solarButton.style.cssText = `\n      --bg-solar: white;\n    `\n\n    body.classList.add('solar');\n    solarButton.innerText = 'normalize';\n\n    localStorage.setItem('isSolar', true);\n  }\n};\nfunction App() {\n  \n  return (\n    <div className=\"App\">\n      <Navbar/>\n      <Header/>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}