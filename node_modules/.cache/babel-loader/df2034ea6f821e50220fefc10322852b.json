{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nlmsc\\\\Documents\\\\React\\\\emma\\\\src\\\\components\\\\navbar\\\\controls\\\\VolumeControl.js\";\nimport \"../Navbar.css\";\nimport CSSProps from \"../../../data/constants/CSSProps\";\nimport React from \"react\";\nimport { SVGIcon } from \"../../Icon\";\nimport ClickSound from \"../../../audio/mixkit-mouse-click-close-1113.wav\";\nimport LocalStorageProps from \"../../../data/constants/LocalStorageProps\";\nimport { Validator } from \"../../../tools/Validator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Volume extends React.Component {\n  getIcon() {\n    let cachedValue = localStorage.getItem(LocalStorageProps.Volume);\n\n    if (Validator.prototype.isEmpty(cachedValue)) {\n      localStorage.setItem(LocalStorageProps.Volume, CSSProps.NavBar.VolumeOn);\n      return localStorage.getItem(LocalStorageProps.Volume);\n    }\n\n    return cachedValue;\n  }\n\n  toggle() {\n    let currentState = this.getIcon();\n\n    if (currentState === CSSProps.NavBar.VolumeOn) {\n      localStorage.setItem(LocalStorageProps.Volume, CSSProps.NavBar.VolumeOff);\n    } else {\n      localStorage.setItem(LocalStorageProps.Volume, CSSProps.NavBar.VolumeOn);\n    }\n\n    let toggleState = localStorage.getItem(LocalStorageProps.Volume);\n    this.setState({\n      iconName: toggleState\n    });\n    return toggleState;\n  }\n\n  render() {\n    let iconName = Validator.prototype.isEmpty(\"\") ? this.getIcon() : this.props.iconName;\n\n    if (this.state != null) {\n      alert(this.state.iconName);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"li\", {\n      className: CSSProps.NavBar.Item,\n      onClick: () => iconName = this.toggle(),\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        href: this.props.path,\n        className: CSSProps.NavBar.Link,\n        children: [/*#__PURE__*/_jsxDEV(SVGIcon, {\n          name: iconName,\n          id: CSSProps.ID.Volume,\n          className: CSSProps.NavBar.Icon\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: CSSProps.NavBar.Text,\n          children: this.props.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n          id: this.props.iconID + CSSProps.ID.Audio,\n          src: ClickSound\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Volume;","map":{"version":3,"sources":["C:/Users/nlmsc/Documents/React/emma/src/components/navbar/controls/VolumeControl.js"],"names":["CSSProps","React","SVGIcon","ClickSound","LocalStorageProps","Validator","Volume","Component","getIcon","cachedValue","localStorage","getItem","prototype","isEmpty","setItem","NavBar","VolumeOn","toggle","currentState","VolumeOff","toggleState","setState","iconName","render","props","state","alert","Item","path","Link","ID","Icon","Text","text","iconID","Audio"],"mappings":"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","sourcesContent":["import \"../Navbar.css\";\r\nimport CSSProps from \"../../../data/constants/CSSProps\";\r\nimport React from \"react\";\r\nimport { SVGIcon } from \"../../Icon\";\r\nimport ClickSound from \"../../../audio/mixkit-mouse-click-close-1113.wav\";\r\nimport LocalStorageProps from \"../../../data/constants/LocalStorageProps\";\r\nimport { Validator } from \"../../../tools/Validator\";\r\n\r\nclass Volume extends React.Component {\r\n  getIcon() {\r\n    let cachedValue = localStorage.getItem(LocalStorageProps.Volume);\r\n    if (Validator.prototype.isEmpty(cachedValue)) {\r\n      localStorage.setItem(LocalStorageProps.Volume, CSSProps.NavBar.VolumeOn);\r\n      return localStorage.getItem(LocalStorageProps.Volume);\r\n    }\r\n    return cachedValue;\r\n  }\r\n\r\n  toggle() {\r\n    let currentState = this.getIcon();\r\n    if(currentState === CSSProps.NavBar.VolumeOn){\r\n      localStorage.setItem(LocalStorageProps.Volume, CSSProps.NavBar.VolumeOff);\r\n    }else{\r\n      localStorage.setItem(LocalStorageProps.Volume, CSSProps.NavBar.VolumeOn);      \r\n    }\r\n    let toggleState =localStorage.getItem(LocalStorageProps.Volume);\r\n    this.setState({iconName : toggleState});\r\n    return toggleState;\r\n  }\r\n\r\n  render() {\r\n    \r\n    let iconName = Validator.prototype.isEmpty(\"\") ? this.getIcon():this.props.iconName;\r\n    if(this.state != null){alert(this.state.iconName);}\r\n    \r\n    return (\r\n      <li className={CSSProps.NavBar.Item} onClick={() => iconName =this.toggle()}>\r\n        <a href={this.props.path} className={CSSProps.NavBar.Link}>\r\n          <SVGIcon\r\n            name={iconName}\r\n            id={CSSProps.ID.Volume}\r\n            className={CSSProps.NavBar.Icon}\r\n          />\r\n          <span className={CSSProps.NavBar.Text}>{this.props.text}</span>\r\n          <audio id={this.props.iconID + CSSProps.ID.Audio} src={ClickSound} />\r\n        </a>\r\n      </li>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Volume;\r\n"]},"metadata":{},"sourceType":"module"}