{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nlmsc\\\\Documents\\\\React\\\\emma\\\\src\\\\components\\\\navbar\\\\controls\\\\ThemeControl.js\",\n    _s = $RefreshSig$();\n\nimport \"../Navbar.css\";\nimport { ReactComponent as Theme } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../../icons/Adjust.svg\";\nimport CSSProps from \"../../../data/constants/CSSProps\";\nimport DictionaryProps from \"../../../data/constants/DictionaryProps\";\nimport LocalStorageProps from \"../../../data/constants/LocalStorageProps\";\nimport React, { useEffect } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport Paths from \"../../../data/constants/Paths\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ThemeControl = () => {\n  _s();\n\n  const [t, i18n] = useTranslation(DictionaryProps.Common);\n  var alterToggleName = DictionaryProps.Alternative;\n  useEffect(() => {\n    // DOM Elements\n    const darkButton = document.getElementById(CSSProps.Dark);\n    const lightButton = document.getElementById(CSSProps.Light);\n    const solarButton = document.getElementById(CSSProps.Alternative);\n    const body = document.body; // Apply the cached theme on reload\n\n    const theme = localStorage.getItem(LocalStorageProps.Theme);\n    const isSolar = localStorage.getItem(LocalStorageProps.IsSolar);\n\n    if (theme) {\n      body.classList.add(theme);\n      isSolar && body.classList.add(CSSProps.Alternative);\n    }\n\n    if (isSolar) {\n      solarButton.style.cssText = CSSProps.BGWhite;\n      solarButton.innerText = t(DictionaryProps.Normalize);\n    } // Button Event Handlers\n\n\n    darkButton.onclick = () => {\n      body.classList.replace(CSSProps.Light, CSSProps.Dark);\n      localStorage.setItem(LocalStorageProps.Theme, CSSProps.Dark);\n\n      if (body.classList.contains(CSSProps.Alternative)) {\n        solarButton.style.cssText = CSSProps.BGDark;\n      } else {\n        solarButton.style.cssText = CSSProps.BGPrimary;\n      }\n    };\n\n    lightButton.onclick = () => {\n      body.classList.replace(CSSProps.Dark, CSSProps.Light);\n      localStorage.setItem(LocalStorageProps.Theme, CSSProps.Light);\n\n      if (body.classList.contains(CSSProps.Alternative)) {\n        solarButton.style.cssText = CSSProps.BGWhite;\n      } else {\n        solarButton.style.cssText = CSSProps.BGPrimary;\n      }\n    };\n\n    solarButton.onclick = () => {\n      if (body.classList.contains(CSSProps.Alternative)) {\n        body.classList.remove(CSSProps.Alternative);\n        solarButton.style.cssText = CSSProps.BGPrimary;\n        solarButton.innerText = t(DictionaryProps.Alternative);\n        localStorage.removeItem(LocalStorageProps.IsSolar);\n      } else {\n        if (body.classList.contains(CSSProps.Light)) {\n          solarButton.style.cssText = CSSProps.BGWhite;\n        } else {\n          solarButton.style.cssText = CSSProps.BGDark;\n        }\n\n        body.classList.add(CSSProps.Alternative);\n        solarButton.innerText = t(DictionaryProps.Normalize);\n        localStorage.setItem(LocalStorageProps.IsSolar, true);\n      }\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    className: \"navbar-item has-dropdown\",\n    children: [/*#__PURE__*/_jsxDEV(\"a\", {\n      className: \"nav-link\",\n      href: Paths.Default,\n      children: [/*#__PURE__*/_jsxDEV(Theme, {\n        className: \"nav-icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"navlink-text\",\n        children: \"Theme\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"dropdown\",\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"dropdown-item\",\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          id: \"light\",\n          href: Paths.Default,\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"dropdown-text\",\n            children: \"Light\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"dropdown-item\",\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          id: \"dark\",\n          href: Paths.Default,\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"dropdown-text\",\n            children: \"Dark\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"dropdown-item\",\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          id: \"solar\",\n          href: Paths.Default,\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"dropdown-text\",\n            children: alterToggleName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ThemeControl, \"iznQqQYU1SNZTjEPFUh/Drv8wsI=\", false, function () {\n  return [useTranslation];\n});\n\n_c = ThemeControl;\nexport default ThemeControl;\n\nvar _c;\n\n$RefreshReg$(_c, \"ThemeControl\");","map":{"version":3,"sources":["C:/Users/nlmsc/Documents/React/emma/src/components/navbar/controls/ThemeControl.js"],"names":["CSSProps","DictionaryProps","LocalStorageProps","React","useEffect","useTranslation","Paths","ThemeControl","t","i18n","Common","alterToggleName","Alternative","darkButton","document","getElementById","Dark","lightButton","Light","solarButton","body","theme","localStorage","getItem","Theme","isSolar","IsSolar","classList","add","style","cssText","BGWhite","innerText","Normalize","onclick","replace","setItem","contains","BGDark","BGPrimary","remove","removeItem","Default"],"mappings":"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","sourcesContent":["import \"../Navbar.css\";\r\nimport { ReactComponent as Theme } from \"../../../icons/Adjust.svg\";\r\nimport CSSProps from \"../../../data/constants/CSSProps\";\r\nimport DictionaryProps from \"../../../data/constants/DictionaryProps\";\r\nimport LocalStorageProps from \"../../../data/constants/LocalStorageProps\";\r\nimport React, { useEffect } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport Paths from \"../../../data/constants/Paths\";\r\n\r\nconst ThemeControl = () => {\r\n  const [t, i18n] = useTranslation(DictionaryProps.Common);\r\n  var alterToggleName = DictionaryProps.Alternative;\r\n  useEffect(() => {\r\n    // DOM Elements\r\n\r\n    const darkButton = document.getElementById(CSSProps.Dark);\r\n    const lightButton = document.getElementById(CSSProps.Light);\r\n    const solarButton = document.getElementById(CSSProps.Alternative);\r\n    const body = document.body;\r\n\r\n    // Apply the cached theme on reload\r\n\r\n    const theme = localStorage.getItem(LocalStorageProps.Theme);\r\n    const isSolar = localStorage.getItem(LocalStorageProps.IsSolar);\r\n\r\n    if (theme) {\r\n      body.classList.add(theme);\r\n      isSolar && body.classList.add(CSSProps.Alternative);\r\n    }\r\n\r\n    if (isSolar) {\r\n      solarButton.style.cssText = CSSProps.BGWhite;\r\n      solarButton.innerText = t(DictionaryProps.Normalize);\r\n    }\r\n\r\n    // Button Event Handlers\r\n\r\n    darkButton.onclick = () => {\r\n      body.classList.replace(CSSProps.Light, CSSProps.Dark);\r\n      localStorage.setItem(LocalStorageProps.Theme, CSSProps.Dark);\r\n\r\n      if (body.classList.contains(CSSProps.Alternative)) {\r\n        solarButton.style.cssText = CSSProps.BGDark;\r\n      } else {\r\n        solarButton.style.cssText = CSSProps.BGPrimary;\r\n      }\r\n    };\r\n\r\n    lightButton.onclick = () => {\r\n      body.classList.replace(CSSProps.Dark, CSSProps.Light);\r\n      localStorage.setItem(LocalStorageProps.Theme, CSSProps.Light);\r\n\r\n      if (body.classList.contains(CSSProps.Alternative)) {\r\n        solarButton.style.cssText = CSSProps.BGWhite;\r\n      } else {\r\n        solarButton.style.cssText = CSSProps.BGPrimary;\r\n      }\r\n    };\r\n\r\n    solarButton.onclick = () => {\r\n      if (body.classList.contains(CSSProps.Alternative)) {\r\n        body.classList.remove(CSSProps.Alternative);\r\n        solarButton.style.cssText = CSSProps.BGPrimary;\r\n        solarButton.innerText = t(DictionaryProps.Alternative);\r\n        localStorage.removeItem(LocalStorageProps.IsSolar);\r\n      } else {\r\n        if (body.classList.contains(CSSProps.Light)) {\r\n          solarButton.style.cssText = CSSProps.BGWhite;\r\n        } else {\r\n          solarButton.style.cssText = CSSProps.BGDark;\r\n        }\r\n        body.classList.add(CSSProps.Alternative);\r\n        solarButton.innerText = t(DictionaryProps.Normalize);\r\n\r\n        localStorage.setItem(LocalStorageProps.IsSolar, true);\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <li className=\"navbar-item has-dropdown\">\r\n      <a className=\"nav-link\" href={Paths.Default}>\r\n        <Theme className=\"nav-icon\"></Theme>\r\n        <span className=\"navlink-text\">Theme</span>\r\n      </a>\r\n      <ul className=\"dropdown\">\r\n        <li className=\"dropdown-item\">\r\n          <a id=\"light\" href={Paths.Default}>\r\n            <span className=\"dropdown-text\">Light</span>\r\n          </a>\r\n        </li>\r\n        <li className=\"dropdown-item\">\r\n          <a id=\"dark\" href={Paths.Default}>\r\n            <span className=\"dropdown-text\">Dark</span>\r\n          </a>\r\n        </li>\r\n        <li className=\"dropdown-item\">\r\n          <a id=\"solar\" href={Paths.Default}>\r\n            <span className=\"dropdown-text\">{alterToggleName}</span>\r\n          </a>\r\n        </li>\r\n      </ul>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default ThemeControl;\r\n"]},"metadata":{},"sourceType":"module"}